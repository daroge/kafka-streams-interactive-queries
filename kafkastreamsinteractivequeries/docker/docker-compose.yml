version: "3.5"

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      TZ: "${TZ-Europe/Berlin}"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      TZ: "${TZ-Europe/Berlin}"

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "29093:29093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9093,PLAINTEXT_HOST://localhost:29093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093,PLAINTEXT_HOST://0.0.0.0:29093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      TZ: "${TZ-Europe/Berlin}"

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "29094:29094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094,PLAINTEXT_HOST://localhost:29094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,PLAINTEXT_HOST://0.0.0.0:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      TZ: "${TZ-Europe/Berlin}"

  datasource:
    image: daroge/kafka-queries-datasource
    build:
      context: ..
      dockerfile: kafka-streams-queries-datasource/Dockerfile
      args:
        JAR_FILE: target/kafka-streams-queries-datasource-1.0-SNAPSHOT.jar
    depends_on:
      - kafka-topics-ui

  processing:
    image: daroge/kafka-queries-processing
    build:
      context: ..
      dockerfile: kafka-streams-queries-processing/Dockerfile
      args:
        JAR_FILE: target/kafka-streams-queries-processing-1.0-SNAPSHOT.jar
    depends_on:
      - datasource
    ports:
      - "7070:7070"

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    container_name: kafka-rest-proxy
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka
      - kafka1
      - kafka2
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka1:9093
      KAFKA_REST_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_REST_HOST_NAME: "kafka-rest-proxy"
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
      TZ: "${TZ-Europe/Berlin}"

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:latest
    container_name: kafka-topics-ui
    restart: unless-stopped
    depends_on:
      - kafka-rest-proxy
    ports:
      - "8085:8000"
    environment:
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082"
      PROXY: "true"
